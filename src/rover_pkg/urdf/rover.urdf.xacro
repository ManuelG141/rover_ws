<?xml version="1.0"?>
<robot name="rover" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- <xacro:property name="pi" value="3.14"/> -->
    <!-- <xacro:property name="proper" value="value"/> -->
    <!-- <link name="${proper}"/> -->
    <!-- Materials -->

    <material name="black">
        <color rgba="0 0 0 1"/>
    </material>

    <material name="white">
        <color rgba="1 1 1 1"/>
    </material>

    <material name="red">
        <color rgba="1 0 0 1"/>
    </material>

    <material name="FF9300">
        <color rgba="1 0.576470588 0 1"/>
    </material>

    <!-- Map link -->
    <link name="map" >
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
    </link>
       
    <!-- List of 3D inertia tensors: https://en.wikipedia.org/wiki/List_of_moments_of_inertia#List_of_3D_inertia_tensors -->
    <!-- To calculate inertia on baselink-->
    <xacro:property name="pi" value="3.14159265359"/>
    <xacro:property name="const" value="${1/12}"/>
    <xacro:property name="base_mass" value="1.0"/> <!--Kg-->
    <xacro:property name="base_width" value="0.6"/>
    <!-- <xacro:property name="height" value="0.25"/> -->
    <xacro:property name="base_height" value="0.232"/>
    <xacro:property name="base_depth" value="0.3"/>

    <xacro:property name="scale" value="0.001"/> <!-- This works for base_link and laser links, helps to scale them propertly-->

    <!-- Base link -->
    <link name="base_link">

        <inertial>  <!--Inertial model for simulation on GAZEBO -->
            <origin xyz="-0.004 0.0 0.009" rpy="0.0 0.0 0.0"/>
            <mass value="${base_mass}"/>
            <inertia ixx="${const * (base_mass * (base_height**2 + base_depth**2))}" ixy="0.0" ixz="0.0"
                     iyy="${const * (base_mass * (base_width**2 + base_height**2))}" iyz="0.0" 
                     izz="${const * (base_mass * (base_width**2 + base_depth**2))}"/>
        </inertial> 

        <visual> <!-- Visual model for RVIZ and GAZENBO-->
            <origin xyz="0.0 0.0 -0.12" rpy="0.0 0.0 0.0"/>
            <geometry>
                <mesh filename="package://rover_pkg/meshes/base4.stl" scale="${scale} ${scale} ${scale}"/>
                <!-- <box size="${width} ${depth} ${height}" /> -->
            </geometry>
            <material name="FF9300"/>
        </visual>

        <collision> <!-- Simplified collision model for RVIZ and GAZENBO -->
            <!-- <origin xyz="-0.004 0.0 ${(-0.012/2.0) + 0.015}" rpy="0.0 0.0 0.0"/> -->
            <origin xyz="-0.004 0.0 0.009" rpy="0.0 0.0 0.0"/>
            <geometry>
                <!-- <box size="${width} ${depth} ${height+0.012 - 0.03}" /> -->
                <box size="${base_width} ${base_depth} ${base_height}" />
            </geometry>
        </collision>
    </link>

    <joint name="base_joint" type="fixed">
        <origin xyz="0.0 0.0 0.14" rpy="0.0 0.0 0.0"/>
        <parent link="map"/>
        <child link="base_link"/>
        <axis xyz="0.0 0.0 0.0"/>
    </joint>

    <xacro:macro name="wheel" params="name x y z">
        <link name="${name}_wheel_link">

            <!-- <inertial>
                <origin xyz="0.0 0.0 0.0" rpy="${pi/2.0} 0.0 0.0"/>
                <mass value="0.1"/>
                <inertia ixx="0.0" ixy="0.0" ixz="0.0"
                         iyy="0.0" iyz="0.0" 
                         izz="0.0"/>
            </inertial> -->

            <!-- <visual> No visual, just collision and inertial model for RVIZ and GAZEBO
                <origin xyz="3.892 0.0 0.28" rpy="0.0 0.0 0.0"/>
                <geometry>
                    <mesh filename="package://mobile_robot/meshes/tire.stl or (mesh.stl)" scale="0.003 0.003 0.003"/>
                </geometry>
                <material name="black"/>
            </visual> -->

            <collision>
            <origin xyz="0.0 0.0 0.0" rpy="${pi/2.0} 0.0 0.0"/>
                <geometry>
                    <cylinder radius="0.065" length="0.05"/>
                </geometry>
                <material name="red"/>
            </collision>
        </link>

        <joint name="${name}_wheel_joint" type="fixed">
            <origin xyz="${x} ${y} ${z}" rpy="0.0 0.0 0.0"/>
            <parent link="base_link"/>
            <child link="${name}_wheel_link"/>
            <!-- <axis xyz="0.0 1.0 0.0"/> -->
        </joint>    
    </xacro:macro>

    <!-- Properties to clean up the code-->
    <xacro:property name="wheel_to_base_height" value="-0.0841" />
    <xacro:property name="wheel_to_base_deep" value="0.185" />

    <!-- Rear Right Front -->
    <xacro:wheel name="rear_right_front" x="0.222" y="${wheel_to_base_deep}" z="${wheel_to_base_height}" />
    <!-- Rear Left Front -->
    <xacro:wheel name="rear_left_front" x="0.222" y="${-wheel_to_base_deep}" z="${wheel_to_base_height}" />
    <!-- Rear Right Middle -->
    <xacro:wheel name="rear_right_middle" x="0.019" y="${wheel_to_base_deep}" z="${wheel_to_base_height}" />
    <!-- Rear Left Middle -->
    <xacro:wheel name="rear_left_middle" x="0.019" y="${-wheel_to_base_deep}" z="${wheel_to_base_height}" />
    <!-- Rear Right Back -->
    <xacro:wheel name="rear_right_back" x="-0.247" y="${wheel_to_base_deep}" z="${wheel_to_base_height}" />
    <!-- Rear Left Back -->
    <xacro:wheel name="rear_left_back" x="-0.247" y="${-wheel_to_base_deep}" z="${wheel_to_base_height}" />  

    <!-- To calculate inertia on baselink-->
    <xacro:property name="laser_mass" value="0.2"/> <!--Kg-->
    <xacro:property name="laser_width" value="0.1"/>
    <!-- <xacro:property name="height" value="0.25"/> -->
    <xacro:property name="laser_height" value="0.07"/>
    <xacro:property name="laser_depth" value="0.07"/>

    <!-- Laser link -->
    <link name="laser">

        <inertial>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <mass value="1.0"/>
            <inertia ixx="${const * (laser_mass * (laser_height**2 + laser_depth**2))}" ixy="0.0" ixz="0.0"
                     iyy="${const * (laser_mass * (laser_width**2 + laser_height**2))}" iyz="0.0" 
                     izz="${const * (laser_mass * (laser_width**2 + laser_depth**2))}"/>
        </inertial>

        <visual>
            <!-- <origin xyz="1.2 1.7 0.5" rpy="0.0 0.0 0.0"/> -->
            <origin xyz="0.035 -0.035 -0.035" rpy="${pi/2.0} 0.0 ${pi}"/>
            <geometry>
                <mesh filename="package://rover_pkg/meshes/rplidar_main.stl" scale="${scale} ${scale} ${scale}"/>
                <!-- <box size="${width} ${depth} ${height}" /> -->
            </geometry>
            <material name="black"/>
        </visual>

        <collision>
            <origin xyz="-0.015 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="${laser_width} ${laser_depth} ${laser_height}" />
                <!-- <box size="0.1 0.07 0.07" /> -->
            </geometry>
        </collision>
    </link>

    <joint name="laser_joint" type="fixed">
        <!-- <origin xyz="0.0 0.0 0.13" rpy="0.0 0.0 0.0"/> -->
        <origin xyz="0.0 0.0 0.15" rpy="0.0 0.0 0.0"/>
        <parent link="base_link"/>
        <child link="laser"/>
        <axis xyz="0.0 0.0 0.0"/>
    </joint>

    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/</robotNamespace>
        </plugin>
    </gazebo>

</robot>